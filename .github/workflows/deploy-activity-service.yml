name: Deploy Activity Service

on:
  push:
    paths:
      - src/activity-service/**
    branches:
      - "main"
  pull_request:
    paths:
      - src/activity-service/**
    branches:
      - "main"
    types: [opened, synchronize, reopened]

permissions:
  id-token: write
  contents: read

jobs:
  # deploy-tf:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Install poetry
  #       run: pipx install poetry
  #     - name: Set up Python
  #       uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
  #       with:
  #         python-version: "3.13"
  #         cache: "poetry" # NOTE: poetry must be installed before this step, or else cache doesn't work
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@master
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  #         role-session-name: GitHub_to_AWS_via_FederatedOIDC
  #         aws-region: "eu-west-2"
  #     - name: Set Commit Hash Environment Variables
  #       shell: bash
  #       run: |
  #         echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
  #     - name: Build
  #       shell: bash
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: "dev"
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-west-2"
  #       run: |
  #         cd src/activity-service
  #         make build
  #     - name: Deploy ephermal environment
  #       shell: bash
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: ${{ env.sha_short }}
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-west-2"
  #         TF_STATE_BUCKET_NAME: ${{secrets.TF_STATE_BUCKET_NAME}}
  #       run: |
  #         cd src/activity-service
  #         make tf-apply
  #     - name: Sleep for 60 seconds
  #       run: sleep 60s
  #       shell: bash
  #     - name: Integration test ephermal environment
  #       shell: bash
  #       env:
  #         ENV: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         AWS_REGION: "eu-west-2"
  #       run: |
  #         cd src/activity-service
  #         make integration-test
  #     - name: Destroy ephermal environment
  #       shell: bash
  #       if: always()
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: ${{ env.sha_short }}
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-west-2"
  #         TF_STATE_BUCKET_NAME: ${{secrets.TF_STATE_BUCKET_NAME}}
  #       run: |
  #         cd src/activity-service
  #         make tf-destroy
  #     - name: Deploy to dev
  #       if: github.event_name == 'push'
  #       shell: bash
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: "dev"
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-west-2"
  #         TF_STATE_BUCKET_NAME: ${{secrets.TF_STATE_BUCKET_NAME}}
  #       run: |
  #         cd src/activity-service
  #         make tf-apply
  #     - name: Sleep for 60 seconds
  #       if: github.event_name == 'push'
  #       run: sleep 60s
  #       shell: bash
  #     - name: Integration test dev
  #       if: github.event_name == 'push'
  #       shell: bash
  #       env:
  #         ENV: "dev"
  #         AWS_REGION: "eu-west-2"
  #       run: |
  #         cd src/activity-service
  #         make integration-test
  #     - name: Destroy dev
  #       shell: bash
  #       if: always()
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: "dev"
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-west-2"
  #         TF_STATE_BUCKET_NAME: ${{secrets.TF_STATE_BUCKET_NAME}}
  #       run: |
  #         cd src/activity-service
  #         make tf-destroy

  deploy-cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
          cache: "poetry" # NOTE: poetry must be installed before this step, or else cache doesn't work
      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.0.3
        with:
          node-version: "20"
      - name: Install CDK
        run: |
          npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: "eu-west-1"
      - name: Set Commit Hash Environment Variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      - name: Install dependencies
        run: |
          cd src/activity-service
          make dev
      - name: Deploy ephermal environment
        shell: bash
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          VERSION: ${{ env.sha_short }}
          ENV: ${{ env.sha_short }}
          DD_API_KEY_SECRET_ARN: ${{secrets.EU_WEST_1_DD_API_KEY_SECRET_ARN}}
          DD_API_KEY: ${{secrets.DD_API_KEY}}
          DD_SITE: "datadoghq.eu"
        run: |
          cd src/activity-service
          make cdk-deploy
      - name: Integration test ephermal environment
        shell: bash
        env:
          ENV: ${{ env.sha_short }}
          VERSION: ${{ env.sha_short }}
          AWS_REGION: "eu-west-1"
        run: |
          cd src/activity-service
          make integration-test
      - name: Destroy ephermal environment
        shell: bash
        if: always()
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          VERSION: ${{ env.sha_short }}
          ENV: ${{ env.sha_short }}
          DD_API_KEY: ${{secrets.DD_API_KEY}}
          DD_SITE: "datadoghq.eu"
        run: |
          cd src/activity-service
          make cdk-destroy
      - name: Deploy to dev
        if: github.event_name == 'push'
        shell: bash
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          VERSION: ${{ env.sha_short }}
          ENV: "dev"
          DD_API_KEY: ${{secrets.DD_API_KEY}}
          DD_SITE: "datadoghq.eu"
        run: |
          cd src/activity-service
          make cdk-deploy
      - name: Integration test dev
        if: github.event_name == 'push'
        shell: bash
        env:
          ENV: "dev"
          AWS_REGION: "eu-west-1"
        run: |
          cd src/activity-service
          make integration-test
      - name: Destroy dev
        shell: bash
        if: always()
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          VERSION: ${{ env.sha_short }}
          ENV: "dev"
          DD_API_KEY: ${{secrets.DD_API_KEY}}
          DD_SITE: "datadoghq.eu"
        run: |
          cd src/activity-service
          make cdk-destroy

  # deploy-sam:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Install poetry
  #       run: pipx install poetry
  #     - name: Set up Python
  #       uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
  #       with:
  #         python-version: "3.13"
  #         cache: "poetry" # NOTE: poetry must be installed before this step, or else cache doesn't work
  #     - uses: aws-actions/setup-sam@v1
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@master
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  #         role-session-name: GitHub_to_AWS_via_FederatedOIDC
  #         aws-region: "eu-central-1"
  #     - name: Set Commit Hash Environment Variables
  #       shell: bash
  #       run: |
  #         echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
  #     - name: Build
  #       shell: bash
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: "dev"
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make build
  #     - name: Deploy to ephermal environment
  #       shell: bash
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: ${{ env.sha_short }}
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make sam
  #     - name: Integration test ephermal environment
  #       shell: bash
  #       env:
  #         ENV: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make integration-test
  #     - name: Destroy
  #       shell: bash
  #       if: always()
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         ENV: ${{ env.sha_short }}
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make sam-destroy
  #     - name: Deploy to dev
  #       if: github.event_name == 'push'
  #       shell: bash
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: "dev"
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make sam
  #     - name: Integration test dev
  #       if: github.event_name == 'push'
  #       shell: bash
  #       env:
  #         ENV: "dev"
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make integration-test
  #     - name: Destroy dev
  #       shell: bash
  #       if: always()
  #       env:
  #         COMMIT_HASH: ${{ env.sha_short }}
  #         VERSION: ${{ env.sha_short }}
  #         ENV: "dev"
  #         DD_API_KEY: ${{secrets.DD_API_KEY}}
  #         DD_SITE: "datadoghq.eu"
  #         AWS_REGION: "eu-central-1"
  #       run: |
  #         cd src/activity-service
  #         make sam-destroy
