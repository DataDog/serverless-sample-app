name: Rust CDK Deploy

on:
    push:
      paths:
        - src/rust/src/**
        - src/rust/bin/**
        - src/rust/lib/**
      branches:
          - 'main'
    workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  package-and-test:
    runs-on: ubuntu-latest
    concurrency:
        group: rust-cdk
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install CDK
        run: |
          npm install -g aws-cdk
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: mlugg/setup-zig@v1
      - name: Install Cargo Lambda
        run: |
          cargo install cargo-lambda
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: "eu-west-1"
      - name: Set Commit Hash Environment Variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
      - name: Deploy to AWS
        shell: bash
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          ENV: "test"
          DD_API_KEY_SECRET_ARN: ${{secrets.DD_API_KEY_SECRET_ARN}}
          DD_SITE: "datadoghq.eu"
        run: |
          make cdk-rust
      - name: Configure Datadog Test Visibility
        uses: datadog/test-visibility-github-action@v2
        with:
          languages: js
          service: serverless-sample-rust-cdk
          api_key: ${{ secrets.DD_API_KEY }}
          site: datadoghq.eu
      - name: Run end to end test
        shell: bash
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          ENV: "test"
          DD_API_KEY_SECRET_ARN: ${{secrets.DD_API_KEY_SECRET_ARN}}
          DD_SITE: "datadoghq.eu"
          RUNTIME: "Rust"
          NODE_OPTIONS: -r ${{ env.DD_TRACE_PACKAGE }}
        run: |
          make end-to-end-test
      - name: Destroy
        if: always()
        shell: bash
        env:
          COMMIT_HASH: ${{ env.sha_short }}
          ENV: "test"
          DD_API_KEY_SECRET_ARN: ${{secrets.DD_API_KEY_SECRET_ARN}}
          DD_SITE: "datadoghq.eu"
        run: |
          make cdk-rust-destroy
          