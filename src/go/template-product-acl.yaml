#
# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2024 Datadog, Inc.
#

AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31
Description: A sample SAM template for deploying Lambda functions.

Parameters:
  ServiceName:
    Type: String
    Default: GoProductAcl
  Env:
    Type: String
    Default: dev
  CommitHash:
    Type: String
    Default: latest
  DDApiKeySecretArn:
    Type: String
  DDSite:
    Type: String

Globals:
  Function:
    Runtime: provided.al2023
    Timeout: 29
    MemorySize: 512
    Layers:
      - !Sub arn:aws:lambda:${AWS::Region}:464622532012:layer:Datadog-Extension-ARM:68
    Environment:
      Variables:
        ENV: !Ref Env
        DD_ENV: !Ref Env
        DD_API_KEY_SECRET_ARN: !Ref DDApiKeySecretArn
        DD_SITE: !Ref DDSite
        DD_VERSION: !Ref CommitHash
        DD_SERVICE: !Ref ServiceName
        POWERTOOLS_SERVICE_NAME: !Ref ServiceName
        POWERTOOLS_LOG_LEVEL: 'INFO'
    Architectures:
      - arm64

Resources:
  ProductInventoryStockUpdatedHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: bootstrap
      FunctionName: !Sub GoProductInventoryStockUpdatedHandler-${Env}
      Environment:
        Variables:
          STOCK_LEVEL_UPDATED_TOPIC_ARN: !Ref StockUpdatedTopic
          DD_SERVICE_MAPPING: !Sub "lambda_sqs:${GoProductStockUpdatedEventQueue.QueueName}"
      Events:
        IntegrationQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt GoProductStockUpdatedEventQueue.Arn
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref DDApiKeySecretArn
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt StockUpdatedTopic.TopicName
    Metadata:
      BuildMethod: makefile
 
  StockUpdatedTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "GoProductStockUpdated-${Env}"
  
  StockUpdatedTopicArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /go/product/stock-updated-topic
      Type: String
      Value: !Ref StockUpdatedTopic

  GoProductStockUpdatedDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "GoProductStockUpdatedDLQ-${Env}"

  GoProductStockUpdatedEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "GoProductStockUpdatedEventQueue-${Env}"
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "GoProductStockUpdatedDLQ"
            - "Arn"
        maxReceiveCount: 3

  ProductCreatedEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: "{{resolve:ssm:/go/shared/event-bus-name:1}}"
      Name: product-stock-updated
      State: ENABLED
      EventPattern:
        source:
          - !Sub "${Env}.inventory"
        detail-type:
          - "inventory.stockUpdated.v1"
      Targets:
        - Id: ProductCreatedEventQueue
          Arn: !GetAtt GoProductStockUpdatedEventQueue.Arn

  SnsToQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties: 
      Queues:
        - !Ref GoProductStockUpdatedEventQueue
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Sid: allow-eb-send-message-messages
            Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Resource: !GetAtt GoProductStockUpdatedEventQueue.Arn
            Action: SQS:SendMessage
