asyncapi: 3.0.0
info:
  title: Inventory Service
  description: The inventory service
  version: 1.0.0

operations:
  sendStockReserved:
    action: send
    channel:
      $ref: '#/channels/inventoryStockReserved'
    messages:
      - $ref: '#/channels/inventoryStockReserved/messages/inventoryStockReservedV1'

  sendStockReservationFailed:
    action: send
    channel:
      $ref: '#/channels/inventoryStockReservationFailed'
    messages:
      - $ref: '#/channels/inventoryStockReservationFailed/messages/inventoryStockReservationFailedV1'

  sendInventoryStockUpdated:
    action: send
    channel:
      $ref: '#/channels/inventoryStockUpdated'
    messages:
      - $ref: '#/channels/inventoryStockUpdated/messages/inventoryStockUpdatedV1'

  sendProductOutOfStock:
    action: send
    channel:
      $ref: '#/channels/productOutOfStock'
    messages:
      - $ref: '#/channels/productOutOfStock/messages/productOutOfStockV1'

  receiveOrderCreated:
    action: receive
    channel:
      $ref: '#/channels/orderCreated'
    messages:
      - $ref: '#/channels/orderCreated/messages/orderCreatedV1'

  receiveProductCreated:
    action: receive
    channel:
      $ref: '#/channels/productCreated'
    messages:
      - $ref: '#/channels/productCreated/messages/productCreatedV1'

  receiveProductUpdated:
    action: receive
    channel:
      $ref: '#/channels/productUpdated'
    messages:
      - $ref: '#/channels/productUpdated/messages/productUpdatedV1'

  receiveProducDeleted:
    action: receive
    channel:
      $ref: '#/channels/productDeleted'
    messages:
      - $ref: '#/channels/productDeleted/messages/productDeletedV1'

channels:
  inventoryStockReserved:
    address: inventory.stockReserved.v1
    messages:
      inventoryStockReservedV1:
        $ref: '#/components/messages/stockReservedV1'
  inventoryStockReservationFailed:
    address: inventory.stockReservationFailed.v1
    messages:
      inventoryStockReservationFailedV1:
        $ref: '#/components/messages/stockReservationFailedV1'
  inventoryStockUpdated:
    address: inventory.stockUpdated.v1
    messages:
      inventoryStockUpdatedV1:
        $ref: '#/components/messages/stockUpdatedV1'
  productOutOfStock:
    address: inventory.outOfStock.v1
    messages:
      productOutOfStockV1:
        $ref: '#/components/messages/productOutOfStockV1'

  orderCreated:
    address: orders.orderCreated.V1
    messages:
      orderCreatedV1:
        $ref: '#/components/messages/orderCreatedV1'

  productCreated:
    address: product.productCreated.v1
    messages:
      productCreatedV1:
        $ref: '#/components/messages/productCreatedV1'

  productUpdated:
    address: product.productUpdated.v1
    messages:
      productUpdatedV1:
        $ref: '#/components/messages/productUpdatedV1'

  productDeleted:
    address: product.productDeleted.v1
    messages:
      productDeletedV1:
        $ref: '#/components/messages/productDeletedV1'

components:
  messages:
    stockReservedV1:
      name: Stock Reserved
      description: 'Event triggered when inventory is reserved for an order'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: provider
      payload:
        type: object
        properties:
          orderNumber:
            type: string
            description: The order number

    stockReservationFailedV1:
      name: Stock Reservation Failed
      description: 'Event triggered when stock reservation fails for an order'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: provider
      payload:
        type: object
        properties:
          orderNumber:
            type: string
            description: The order number

    stockUpdatedV1:
      description: 'Event triggered when the stock of a product is updated'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: provider
      payload:
        type: object
        properties:
          productId:
            type: string
            description: The ID of the product
          previousStockLevel:
            type: integer
            description: The previous stock level
          newStockLevel:
            type: integer
            description: The new stock level

    productOutOfStockV1:
      description: 'Event triggered when a product is out of stock'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: provider
      payload:
        type: object
        properties:
          productId:
            type: string
            description: The ID of the product

    orderCreatedV1:
      description: 'Event received when an order is created'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: client
      payload:
        type: object
        properties:
          orderNumber:
            type: string
            description: The order number
          userId:
            type: string
            description: The users id
          conversationId:
            type: string
            description: The unique conversation identifier

    productCreatedV1:
      description: 'Event received when a new product is created'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: client
      payload:
        type: object
        properties:
          productId:
            type: string
            description: The product ID

    productUpdatedV1:
      description: 'Event received when a product is updated'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: client
      payload:
        type: object
        properties:
          productId:
            type: string
            description: The product ID

    productDeletedV1:
      description: 'Event received when a product is deleted'
      x-eventcatalog-message-type: event
      x-eventcatalog-role: client
      payload:
        type: object
        properties:
          productId:
            type: string
            description: The product ID