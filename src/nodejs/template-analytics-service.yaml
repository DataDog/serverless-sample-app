#
# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2024 Datadog, Inc.
#

AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31
  - Name: DatadogServerless
    Parameters:
      stackName: !Ref "AWS::StackName"
      apiKeySecretArn: !Ref DDApiKeySecretArn
      nodeLayerVersion: 117
      extensionLayerVersion: 67
      service: !Ref ServiceName
      env: !Ref Env
      version: !Ref CommitHash
      site: !Ref DDSite
      captureLambdaPayload: true
Description: A sample SAM template for deploying Lambda functions.

Parameters:
  ServiceName:
    Type: String
    Default: NodeAnalyticsBackend
  Env:
    Type: String
    Default: dev
  CommitHash:
    Type: String
    Default: latest
  DDApiKeySecretArn:
    Type: String
  DDSite:
    Type: String

Globals:
  Function:
    Runtime: nodejs22.x
    Timeout: 29
    MemorySize: 512
    Environment:
      Variables:
        ENV: !Ref Env
        DD_EXTENSION_VERSION: "next"
        POWERTOOLS_SERVICE_NAME: !Ref ServiceName
        POWERTOOLS_LOG_LEVEL: "INFO"
        DOMAIN: "analytics"
    Architectures:
      - x86_64

Resources:
  NodeAnalyticsBackend:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: analyticsEventHandler.handler
      FunctionName: !Sub NodeAnalyticsBackendFunction-${Env}
      Environment:
        Variables:
          DD_TRACE_PROPAGATION_STYLE: "none"
      Events:
        IntegrationQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt NodeAnalyticsEventQueue.Arn
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref DDApiKeySecretArn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "node22"
        Sourcemap: true
        EntryPoints:
          - ./src/analytics-backend/adapters/analyticsEventHandler.ts
        External:
          - "opentracing"
          - "dd-trace"
          - "@datadog/native-metrics"
          - "@datadog/pprof"
          - "@datadog/native-appsec"
          - "@datadog/native-iast-taint-tracking"
          - "@datadog/native-iast-rewriter"
          - "graphql/language/visitor"
          - "graphql/language/printer"
          - "graphql/utilities"

  NodeAnalyticsEventDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "NodeAnalyticsEventDLQ-${Env}"

  NodeAnalyticsEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "NodeAnalyticsEventQueue-${Env}"
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "NodeAnalyticsEventDLQ"
            - "Arn"
        maxReceiveCount: 3

  AnalyticsCatchAllRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: "{{resolve:ssm:/node/shared/event-bus-name:1}}"
      Name: analytics-catch-all
      State: ENABLED
      EventPattern:
        source:
          - prefix: !Sub "${Env}."
      Targets:
        - Id: NodeAnalyticsEventQueue
          Arn: !GetAtt NodeAnalyticsEventQueue.Arn

  EBToQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref NodeAnalyticsEventQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: allow-eb-send-message-messages
            Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Resource: !GetAtt NodeAnalyticsEventQueue.Arn
            Action: SQS:SendMessage
