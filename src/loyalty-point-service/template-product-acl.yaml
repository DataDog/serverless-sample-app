#
# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2024 Datadog, Inc.
#

AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31
  - Name: DatadogServerless
    Parameters:
      stackName: !Ref "AWS::StackName"
      apiKeySecretArn: !Ref DDApiKeySecretArn
      nodeLayerVersion: 117
      extensionLayerVersion: 68
      service: !Ref ServiceName
      env: !Ref Env
      version: !Ref CommitHash
      site: !Ref DDSite
      captureLambdaPayload: true
Description: A sample SAM template for deploying Lambda functions.

Parameters:
  ServiceName:
    Type: String
    Default: NodeProductAcl
  Env:
    Type: String
    Default: dev
  CommitHash:
    Type: String
    Default: latest
  DDApiKeySecretArn:
    Type: String
  DDSite:
    Type: String

Globals:
  Function:
    Runtime: nodejs22.x
    Timeout: 29
    MemorySize: 512
    Environment:
      Variables:
        ENV: !Ref Env
        DD_EXTENSION_VERSION: "next"
        POWERTOOLS_SERVICE_NAME: !Ref ServiceName
        POWERTOOLS_LOG_LEVEL: "INFO"
        DOMAIN: "product"
    Architectures:
      - x86_64

Resources:
  ProductAclStockUpdatedEventHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: stockLevelUpdatedPublicEventHandler.handler
      FunctionName: !Sub ProductAclStockUpdatedEventHandler-${Env}
      Environment:
        Variables:
          STOCK_LEVEL_UPDATED_TOPIC_ARN: !Ref InventoryStockUpdatedTopic
          DD_SERVICE_MAPPING: !Sub "lambda_sqs:${NodeProductStockUpdatedEventQueue.QueueName}"
      Events:
        IntegrationQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt NodeProductStockUpdatedEventQueue.Arn
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref DDApiKeySecretArn
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt InventoryStockUpdatedTopic.TopicName
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "node22"
        Sourcemap: true
        EntryPoints:
          - ./src/product-acl/adapters/stockLevelUpdatedPublicEventHandler.ts
        External:
          - "opentracing"
          - "dd-trace"
          - "@datadog/native-metrics"
          - "@datadog/pprof"
          - "@datadog/native-appsec"
          - "@datadog/native-iast-taint-tracking"
          - "@datadog/native-iast-rewriter"
          - "graphql/language/visitor"
          - "graphql/language/printer"
          - "graphql/utilities"
          - "@aws-sdk/client-sns"
 
  InventoryStockUpdatedTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "NodeProductStockUpdated-${Env}"
  
  InventoryStockUpdatedTopicArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /node/inventory/stock-updated-topic
      Type: String
      Value: !Ref InventoryStockUpdatedTopic

  NodeProductStockUpdatedEventDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "NodeProductStockUpdatedEventDLQ-${Env}"

  NodeProductStockUpdatedEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "NodeProductStockUpdatedEventQueue-${Env}"
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "NodeProductStockUpdatedEventDLQ"
            - "Arn"
        maxReceiveCount: 3

  StockUpdatedEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: "{{resolve:ssm:/node/shared/event-bus-name:1}}"
      Name: product-stock-updated
      State: ENABLED
      EventPattern:
        source:
          - !Sub "${Env}.inventory"
        detail-type:
          - "inventory.stockUpdated.v1"
      Targets:
        - Id: ProductCreatedEventQueue
          Arn: !GetAtt NodeProductStockUpdatedEventQueue.Arn

  SnsToQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties: 
      Queues:
        - !Ref NodeProductStockUpdatedEventQueue
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Sid: allow-eb-send-message-messages
            Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Resource: !GetAtt NodeProductStockUpdatedEventQueue.Arn
            Action: SQS:SendMessage
