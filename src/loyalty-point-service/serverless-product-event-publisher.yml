#
# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2024 Datadog, Inc.
#

service: serverless-product-event-publisher
frameworkVersion: "3"

plugins:
  - serverless-plugin-datadog
  - serverless-esbuild

custom:
  serviceName: NodeProductPublicEventPublisher
  datadog:
    apiKeySecretArn: ${param:DD_API_KEY_SECRET_ARN}
    site: ${param:DD_SITE}
    env: ${sls:stage}
    service: ${self:custom.serviceName}
    version: latest
    # Use this property with care in production to ensure PII/Sensitive data is not stored in Datadog
    captureLambdaPayload: true
    propagateUpstreamTrace: true
  esbuild:
    platform: "node"
    target: "node22"
    bundle: true
    minify: true
    exclude: 
      - "opentracing"
      - "dd-trace"
      - "@datadog/native-metrics"
      - "@datadog/pprof"
      - '@datadog/native-appsec'
      - '@datadog/native-iast-taint-tracking'
      - '@datadog/native-iast-rewriter'
      - 'graphql/language/visitor' 
      - 'graphql/language/printer'
      - 'graphql/utilities'
      - '@aws-sdk/*'

provider:
  name: aws
  runtime: nodejs22.x
  environment:
    DD_EXTENSION_VERSION: "next"
    ENV: ${sls:stage}
    POWERTOOLS_SERVICE_NAME: ${self:custom.serviceName}
    POWERTOOLS_LOG_LEVEL: 'INFO'
    DOMAIN: "products"
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: ${param:DD_API_KEY_SECRET_ARN}
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/${ssm:/node/shared/event-bus-name}"

functions:
  publishPublicEvents:
    handler: src/product-public-event-publisher/adapters/publicEventPublisherFunction.handler
    environment:
      EVENT_BUS_NAME: "${ssm:/node/shared/event-bus-name}"
      PRODUCT_CREATED_TOPIC_ARN: "${ssm:/node/product/product-created-topic}"
      PRODUCT_UPDATED_TOPIC_ARN: "${ssm:/node/product/product-updated-topic}"
      PRODUCT_DELETED_TOPIC_ARN: "${ssm:/node/product/product-deleted-topic}"
      DD_SERVICE_MAPPING: !Sub "lambda_sqs:${ProductPublicEventPublisherQueue.QueueName}"
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ProductPublicEventPublisherQueue, Arn]

resources:
  Resources:
    ProductPublicEventPublisherDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: !Sub "ProductPublicEventPublisherDLQ-${sls:stage}"

    ProductPublicEventPublisherQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: !Sub "ProductPublicEventPublisherQueue-${sls:stage}"
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt ProductPublicEventPublisherDLQ.Arn
          maxReceiveCount: 3

    SnsToQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties: 
        Queues:
          - !Ref ProductPublicEventPublisherQueue
        PolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Sid: allow-created-messages
              Effect: Allow
              Principal: '*'
              Resource: !GetAtt ProductPublicEventPublisherQueue.Arn
              Action: SQS:SendMessage
              Condition: 
                ArnEquals:
                  aws:SourceArn: "{{resolve:ssm:/node/product/product-created-topic:1}}"
            - Sid: allow-updated-messages
              Effect: Allow
              Principal: '*'
              Resource: !GetAtt ProductPublicEventPublisherQueue.Arn
              Action: SQS:SendMessage
              Condition: 
                ArnEquals:
                  aws:SourceArn: "{{resolve:ssm:/node/product/product-updated-topic:1}}"
            - Sid: allow-deleted-messages
              Effect: Allow
              Principal: '*'
              Resource: !GetAtt ProductPublicEventPublisherQueue.Arn
              Action: SQS:SendMessage
              Condition: 
                ArnEquals:
                  aws:SourceArn: "{{resolve:ssm:/node/product/product-deleted-topic:1}}"

    
    ProductCreatedTopicSubscription:
      Type: 'AWS::SNS::Subscription'
      Properties:
        TopicArn: "${ssm:/node/product/product-created-topic}"
        Endpoint: !GetAtt ProductPublicEventPublisherQueue.Arn
        Protocol: sqs
    
    ProductUpdatedTopicSubscription:
      Type: 'AWS::SNS::Subscription'
      Properties:
        TopicArn: "${ssm:/node/product/product-updated-topic}"
        Endpoint: !GetAtt ProductPublicEventPublisherQueue.Arn
        Protocol: sqs
    
    ProductDeletedTopicSubscription:
      Type: 'AWS::SNS::Subscription'
      Properties:
        TopicArn: "${ssm:/node/product/product-deleted-topic}"
        Endpoint: !GetAtt ProductPublicEventPublisherQueue.Arn
        Protocol: sqs
