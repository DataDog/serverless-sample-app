AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Datadog Step Functions Tracing Demo App

# All version values except L12 are double-quoted on purpose since publish.sh is searching for
# version string and replace the value with new version. All other version values should be
# double-quoted.
Mappings:
  Constants:
    DatadogStepFunctionsTracingDemoApp:
      Version: 0.1.2

Parameters:
  DdApiKey:
    Type: String
    Description: >-
      The Datadog API key, which can be found from the APIs page
      (/organization-settings/api-keys).
    NoEcho: true
  DdSite:
    Type: String
    Default: datadoghq.com
    Description: >-
      Define your Datadog Site to send data to. Possible values are
      `datadoghq.com`, `datadoghq.eu`, `us3.datadoghq.com`, `us5.datadoghq.com`
      and `ddog-gov.com`.
    AllowedPattern: .+
    ConstraintDescription: DdSite is required

Resources:
  DatadogForwarder:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://datadog-cloudformation-template.s3.amazonaws.com/aws/forwarder/latest.yaml
      Parameters:
        DdApiKey: !Ref DdApiKey
        DdSite: !Ref DdSite
      TimeoutInMinutes: 5

  SubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      LogGroupName: !Join ['/', ['/aws/vendedlogs/states', 'datadog-demo-state-machine']]
      FilterPattern: ""
      DestinationArn:
        Fn::GetAtt:
          - DatadogForwarder
          - Outputs.DatadogForwarderArn

  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: StepFunctionsDemoFunction
      Runtime: nodejs16.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: /opt/nodejs/node_modules/datadog-lambda-js/handler.handler
      Timeout: 10
      Layers:
        - !Sub 'arn:aws:lambda:${AWS::Region}:464622532012:layer:Datadog-Extension:36'
        - !Sub 'arn:aws:lambda:${AWS::Region}:464622532012:layer:Datadog-Node16-x:86'
      Environment:
        Variables:
          DD_LAMBDA_HANDLER: index.handler
          DD_TRACE_ENABLED: true
          DD_API_KEY: !Ref DdApiKey
          DD_LOG_LEVEL: DEBUG
          DD_SERVICE: datadog-step-functions-tracing-service
          DD_ENV: dev
          DD_VERSION: 1.0.0
          DD_SITE: !Ref DdSite
      Code:
        ZipFile: |
          INJECT_ENTRY_FUNCTION_CODE_PLACEHOLDER

  LambdaCloudWatchLogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref MyLambdaFunction]]
      RetentionInDays: 14

  StateMachineCloudWatchLogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['/', ['/aws/vendedlogs/states', 'datadog-demo-state-machine']]
      RetentionInDays: 14

  DatadogDynamodbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "pk"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "pk"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: "DatadogDemoStepFunctionsTracingTable"

  DatadogDemoStateMachine:
    Type: 'AWS::StepFunctions::StateMachine'
    Properties:
      StateMachineName: datadog-demo-state-machine
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt
              - StateMachineCloudWatchLogsLogGroup
              - Arn
        IncludeExecutionData: true
        Level: ALL
      Tags:
        -
          Key: "env"
          Value: "dev"
        -
          Key: "service"
          Value: "datadog-demo-service"
        -
          Key: "version"
          Value: "1"
      DefinitionString: !Sub
        - |-
          INJECT_STATE_MACHINE_DEFINITION_PLACEHOLDER
        - lambdaArn: !GetAtt
            - MyLambdaFunction
            - Arn

      RoleArn: !GetAtt
        - StatesExecutionRole
        - Arn
    DependsOn:
      - StatesExecutionRole

  CloudWatchIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: '*'

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: ddbQuery
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:Query
            Resource: !GetAtt DatadogDynamodbTable.Arn

  StatesExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub 'states.${AWS::Region}.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: '*'
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource: '*'
        - PolicyName: DynamodbPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:UpdateItem'
                Resource: !GetAtt DatadogDynamodbTable.Arn

Outputs:
  LambdaCloudWatchLogsLogGroupArn:
    Description: Lambda CloudWatch Logs LogGroup ARN
    Value:
      Fn::GetAtt:
        - LambdaCloudWatchLogsLogGroup
        - Arn

