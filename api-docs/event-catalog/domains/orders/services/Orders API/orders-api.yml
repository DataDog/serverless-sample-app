openapi: 3.0.3
info:
  title: Order API
  version: 1.0.0
paths:
  /orders/confirmed:
    get:
      summary: Get confirmed orders
      description: Get all orders that are currently in status confirmed
      operationId: getConfirmedOrders
      x-eventcatalog-message-type: query
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /orders:
    post:
      summary: Create an order
      description: Create a new order
      operationId: createOrder
      x-eventcatalog-message-type: command
      requestBody:
        description: Create a brand new order for the currently logged in user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderCommand'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    get:
      summary: Get user orders
      description: Get all orders for the currently logged in user
      operationId: getUserOrders
      x-eventcatalog-message-type: query
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /orders/{orderId}:
    get:
      summary: Get order details
      description: Get details about the order
      operationId: getOrderDetails
      x-eventcatalog-message-type: query
      parameters:
        - name: orderId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{orderId}/complete:
    post:
      summary: Complete an order
      description: Marks an order as completed
      operationId: completeOrder
      x-eventcatalog-message-type: command
      requestBody:
        description: Complete the order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteOrderCommand'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    Order:
      type: object
      properties:
        orderId:
          type: string
        orderDate:
          type: string
        products:
          type: array
          items:
            type: string
          description: Array of product IDs
          example: ["prod-123", "prod-456"]
        status:
          type: integer
          format: int64
          example: 1
    CreateOrderCommand:
      type: object
      properties:
        products:
          type: array
          items:
            type: string
          description: Array of product IDs
          example: ["prod-123", "prod-456"]
    CompleteOrderCommand:
      type: object
      properties:
        orderId:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    createOrder:
      description: The products to add to the new order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrderCommand'
    completeOrder:
      description: Completing an order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompleteOrderCommand'